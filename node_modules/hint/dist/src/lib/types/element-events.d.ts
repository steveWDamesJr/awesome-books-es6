import { Event } from './event';
export declare type ElementFound = Event & {
    element: import('@hint/utils-dom').HTMLElement;
};
export declare type ElementEvents = {
    'element::*': ElementFound;
    'element::a': ElementFound;
    'element::abbr': ElementFound;
    'element::acronym': ElementFound;
    'element::address': ElementFound;
    'element::applet': ElementFound;
    'element::area': ElementFound;
    'element::article': ElementFound;
    'element::aside': ElementFound;
    'element::audio': ElementFound;
    'element::b': ElementFound;
    'element::base': ElementFound;
    'element::basefont': ElementFound;
    'element::bdi': ElementFound;
    'element::bdo': ElementFound;
    'element::bgsound': ElementFound;
    'element::big': ElementFound;
    'element::blink': ElementFound;
    'element::blockquote': ElementFound;
    'element::body': ElementFound;
    'element::br': ElementFound;
    'element::button': ElementFound;
    'element::canvas': ElementFound;
    'element::caption': ElementFound;
    'element::center': ElementFound;
    'element::cite': ElementFound;
    'element::code': ElementFound;
    'element::col': ElementFound;
    'element::colgroup': ElementFound;
    'element::command': ElementFound;
    'element::content': ElementFound;
    'element::data': ElementFound;
    'element::datalist': ElementFound;
    'element::dd': ElementFound;
    'element::del': ElementFound;
    'element::details': ElementFound;
    'element::dfn': ElementFound;
    'element::dialog': ElementFound;
    'element::dir': ElementFound;
    'element::div': ElementFound;
    'element::dl': ElementFound;
    'element::dt': ElementFound;
    'element::element': ElementFound;
    'element::em': ElementFound;
    'element::embed': ElementFound;
    'element::fieldset': ElementFound;
    'element::figcaption': ElementFound;
    'element::figure': ElementFound;
    'element::font': ElementFound;
    'element::footer': ElementFound;
    'element::form': ElementFound;
    'element::frame': ElementFound;
    'element::frameset': ElementFound;
    'element::h1': ElementFound;
    'element::h2': ElementFound;
    'element::h3': ElementFound;
    'element::h4': ElementFound;
    'element::h5': ElementFound;
    'element::h6': ElementFound;
    'element::header': ElementFound;
    'element::hgroup': ElementFound;
    'element::hr': ElementFound;
    'element::html': ElementFound;
    'element::i': ElementFound;
    'element::iframe': ElementFound;
    'element::image': ElementFound;
    'element::img': ElementFound;
    'element::input': ElementFound;
    'element::ins': ElementFound;
    'element::isindex': ElementFound;
    'element::kbd': ElementFound;
    'element::keygen': ElementFound;
    'element::label': ElementFound;
    'element::legend': ElementFound;
    'element::li': ElementFound;
    'element::link': ElementFound;
    'element::listing': ElementFound;
    'element::main': ElementFound;
    'element::map': ElementFound;
    'element::mark': ElementFound;
    'element::marquee': ElementFound;
    'element::menu': ElementFound;
    'element::menuitem': ElementFound;
    'element::meta': ElementFound;
    'element::meter': ElementFound;
    'element::multicol': ElementFound;
    'element::nav': ElementFound;
    'element::nextid': ElementFound;
    'element::nobr': ElementFound;
    'element::noembed': ElementFound;
    'element::noframes': ElementFound;
    'element::noscript': ElementFound;
    'element::object': ElementFound;
    'element::ol': ElementFound;
    'element::optgroup': ElementFound;
    'element::option': ElementFound;
    'element::output': ElementFound;
    'element::p': ElementFound;
    'element::param': ElementFound;
    'element::picture': ElementFound;
    'element::plaintext': ElementFound;
    'element::pre': ElementFound;
    'element::progress': ElementFound;
    'element::q': ElementFound;
    'element::rb': ElementFound;
    'element::rp': ElementFound;
    'element::rt': ElementFound;
    'element::rtc': ElementFound;
    'element::ruby': ElementFound;
    'element::s': ElementFound;
    'element::samp': ElementFound;
    'element::script': ElementFound;
    'element::section': ElementFound;
    'element::select': ElementFound;
    'element::shadow': ElementFound;
    'element::slot': ElementFound;
    'element::small': ElementFound;
    'element::source': ElementFound;
    'element::spacer': ElementFound;
    'element::span': ElementFound;
    'element::strike': ElementFound;
    'element::strong': ElementFound;
    'element::style': ElementFound;
    'element::sub': ElementFound;
    'element::summary': ElementFound;
    'element::sup': ElementFound;
    'element::table': ElementFound;
    'element::tbody': ElementFound;
    'element::td': ElementFound;
    'element::template': ElementFound;
    'element::textarea': ElementFound;
    'element::tfoot': ElementFound;
    'element::th': ElementFound;
    'element::thead': ElementFound;
    'element::time': ElementFound;
    'element::title': ElementFound;
    'element::tr': ElementFound;
    'element::track': ElementFound;
    'element::tt': ElementFound;
    'element::u': ElementFound;
    'element::ul': ElementFound;
    'element::var': ElementFound;
    'element::video': ElementFound;
    'element::wbr': ElementFound;
    'element::xmp': ElementFound;
};
//# sourceMappingURL=element-events.d.ts.map